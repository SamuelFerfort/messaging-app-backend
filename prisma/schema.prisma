generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  firstName        String
  lastName         String
  email            String    @unique
  password         String
  avatar           String?
  about            String?
  avatarPublicId   String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  isOnline         Boolean   @default(false)
  lastSeen         DateTime  @default(now())
  ReceivedMessages Message[] @relation("ReceivedMessages")
  sentMessages     Message[] @relation("SentMessages")
  chats            Chat[]    @relation("UserChats")
}

model Chat {
  id            String    @id @default(uuid())
  name          String?   @unique
  isGroup       Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastMessageAt DateTime  @default(now())
  messages      Message[]
  users         User[]    @relation("UserChats")
}

model Message {
  id         String      @id @default(uuid())
  content    String
  timestamp  DateTime    @default(now())
  senderId   String
  receiverId String
  updatedAt  DateTime    @updatedAt
  read       Boolean
  chatId     String
  type       MessageType @default(TEXT)
  chat       Chat        @relation(fields: [chatId], references: [id])
  receiver   User        @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender     User        @relation("SentMessages", fields: [senderId], references: [id])
}

enum MessageType {
  TEXT
  IMAGE
  VIDEO
  AUDIO
  FILE
}
